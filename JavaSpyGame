import java.util.Scanner;

class HerrWolf extends Villain {
    private String evilPlan;

    public HerrWolf(String name, int health, String evilPlan) {
        super(name, health);
        this.evilPlan = evilPlan;
    }

    // Other methods specific to Herr Wolf
}

class SpyPeanut extends Hero {
    private String specialAbility;

    public SpyPeanut(String name, int health, String specialAbility) {
        super(name, health);
        this.specialAbility = specialAbility;
    }

    // Other methods specific to Spy Peanut
}

public class PlayTheGame {
    private Hero hero;
    private Villain villain;
    private FurSquad furSquad;
    private SpyHeadquarters EvilSpyHeadQuarters;

    public static void main(String [] args) {
    	PlayTheGame game = new PlayTheGame();
    	game.startGame();
    }
    
    public PlayTheGame() {
        hero = new Hero("Spy Peanut", 100);
        villain = new Villain("Herr Wolf", 200);
        furSquad = new FurSquad(new String[]{"Ace", "Shadow", "Blaze"}, new int[]{80, 90, 85});
        EvilSpyHeadQuarters = new SpyHeadquarters("Secret Hideout");
    }

    public void startGame() {
        System.out.println("=== Spy Adventure Action Game ===");
        hero.displayInfo();
        villain.displayInfo();
        furSquad.displayInfo();
        EvilSpyHeadQuarters.displayLocation();
        // Other game initialization logic

        System.out.println(" from Peanut:  Get ready, Agent! The mission awaits!");
    }

    public void gameLoop() {
        Scanner scanner = new Scanner(System.in);
        boolean gameOver = false;

        while (!gameOver) {
            // Game logic goes here

            // Encouragement from Peanut: "Great job, Agent! Keep up the good work!"
        }

        // Encouragement from Peanut: "Congratulations, Agent! You saved the day!"
    }

    // Other necessary methods related to game logic
}

class SpyHeadquarters {
    private String location;

    public SpyHeadquarters(String location) {
        this.location = location;
    }

    public void displayLocation() {
        System.out.println("Current Location: " + location);
    }

    // Other necessary methods related to the game world
}

//FurSquad.java
class FurSquad {
 private String[] members;
 private int[] healths;

 public FurSquad(String[] members, int[] healths) {
     this.members = members;
     this.healths = healths;
 }

 public void displayInfo() {
     System.out.println("Fur Squad Members:");
     for (int i = 0; i < members.length; i++) {
         System.out.println(members[i] + " - Health: " + healths[i]);
     }
 }
}

class Hero {
    private String name;
    private int health;

    public Hero(String name, int health) {
        this.name = name;
        this.health = health;
    }

    public void displayInfo() {
        System.out.println("Hero Name: " + name);
        System.out.println("Health: " + health);
    }
}

class Villain {
    private String name;
    private int health;

    public Villain(String name, int health) {
        this.name = name;
        this.health = health;
    }

    public void displayInfo() {
        System.out.println("Villain Name: " + name);
        System.out.println("Health: " + health);
    }
}

class SpyAdventure {
    private Hero hero;
    private Villain villain;
    private FurSquad furSquad;
    private SpyHeadquarters gameWorld;

    public void GameLogic() {
        hero = new Hero("Spy Peanut", 100);
        villain = new Villain("Herr Wolf", 200);
        furSquad = new FurSquad(new String[]{"Agent 1", "Agent 2", "Agent 3"}, new int[]{80, 90, 85});
        gameWorld = new SpyHeadquarters("Secret Hideout");
    }

    public void startGame() {
        System.out.println("=== Spy Adventure Action Game ===");
        hero.displayInfo();
        villain.displayInfo();
        furSquad.displayInfo();
        gameWorld.displayLocation();
        // Other game initialization logic

        // Encouragement from Peanut: "Get ready, Agent! The mission awaits!"
    }

    public void gameLoop() {
        Scanner scanner = new Scanner(System.in);
        boolean gameOver = false;

        while (!gameOver) {
            // Game logic goes here

            // Encouragement from Peanut: "Great job, Agent! Keep up the good work!"
        }

        // Encouragement from Peanut: "Congratulations, Agent! You saved the day!"
    }

    // Other necessary methods related to game logic
}



